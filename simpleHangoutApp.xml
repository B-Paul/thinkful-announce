<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *	
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
	<ModulePrefs title="Hangout Starter">
		<Require feature="rpc" />
		<Require feature="views" />
		<Require feature="locked-domain" />
	</ModulePrefs>
	<Content type="html"><![CDATA[

<html>
<body>

<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>

<h3>Simple Hangout App</h3>

<p>
<input class="button" type="button" value="Get Test Data" id="getData" 
    style="visibility:hidden;"
    onClick="getData()"/>
</p>
<p>
<input class="button" type="button" value="Post Test Slack" id="postSlack"
    style="visibility:hidden;"
    onclick="postSlack()"/>
</p>

<div id="data"></div>

<script>
function getData() {
  console.log('getData called');
  var script = document.createElement('script');
  script.src = '//spreadsheets.google.com/feeds/cells/1dbQ5XLk8k83b1Za3Ugmp4PW-9QKaW9j46Pmd0fLT96Y/od6/public/basic?alt=json-in-script&callback=handleData';
  document.body.appendChild(script);
}

function handleData(data) {
  var officeHours = new Grid();
  console.log(data);

  data.feed.entry.forEach(function (cell) {
    console.log('cell title:', cell.title.$t);
    var text = cell.content.$t, address = cell.title.$t.match(/([A-Z]+)(\d+)/g);
    address = {
      col: address[1],
      row: address[2]
    };
    officeHours.add(address, text);
  });

  var retVal = '<p>Test Data: </p><p><code><pre>' + JSON.stringify(officeHours.rows) + '</pre></code></p>';
  var div = document.getElementById('data');
  div.innerHTML = retVal;
}

function Grid() {
  this.cols = {};
  this.rows = {};
  this.add = this._addColumn;
}

Grid.prototype._addColumn = function (address, text) {
  console.log('column:', address);
  console.log('value:', text);
  var row = address.row, col = address.col;
  // Use the rows object to keep track of row numbers we've been given.
  this.rows[row] = this.rows[row];
  console.log('row:', row);
  console.log('rows:', this.rows);

  // Add column names for each header row
  if (Object.keys(this.rows).length <= 1) {
    this.cols[col] = text;
    return this;
  }

  // As soon as past the first row, assume all column headers have been given
  // and switch modes 
  this.add = this._addData;
  delete this._addColumn;
  // Throw away the record of the header row.
  this.rows = {};
  return this.add(address, text);
};

Grid.prototype._addData = function (address, text) {
  console.log('data:', address);
  console.log('value:', text);
  var row = address.row, col = address.col, colName, rowData;

  if ('_addColumn' in this) {
    return this._addColumn(address, text);
  } else if (!(col in this.cols)) {
    throw new Error('no header value for this column');
  }

  colName = this.cols[col];
  rowData = this.rows[row] = this.rows[row] || this.mkRow();
  if (rowData[colName] !== void 0) {
    throw new Error('overlapping data');
  }

  rowData[colName] = text;
  return this;
};

Grid.prototype.mkRow = function () {
  var rowData = {};
  Object.keys(this.cols).forEach(function (key) {
    var colName = this.cols[key];
    rowData[colName] = void 0;
  });
  return rowData;
};

function postSlack(message) {
  var token = 'xoxp-2442078175-3326376290-3725937040-91e5d7';
  var opensource = 'C035VHM9B';
  var url = 'https://slack.com/api/chat.postMessage?token=' + token + '&channel=' + opensource + '&text=' + message;
  var xhr = new XMLHttpRequest();
  xhr.open('GET', url);
  xhr.onLoad = checkSlack;
  xhr.send();
}

function checkSlack(response) {
  console.log(response);
  var div = document.getElementById('data');
  div.innerHTML = JSON.stringify(response);
}

function init() {
  document.getElementById('getData')
    .style.visibility = 'visible';
  document.getElementById('postSlack')
    .style.visibility = 'visible';
  getData();
}

// Wait for gadget to load.                                                       
gadgets.util.registerOnLoadHandler(init);
</script>
</body>
]]>
</Content>
</Module>

